version: '3.7'
x-images:
  env: &env {env_file: [.env, docker.env]}
  {{cookiecutter.app_type}}: &{{cookiecutter.app_type}}
    <<: [ *env ]
    tty: true
    image: "${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE}:${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}-dev"
    depends_on:
      - db
      - redis
    working_dir: /code/src
    command: /bin/bash /code/init/init.sh
    volumes:
      - ./src/project/settings/instances:/code/src/project/settings/instances
      - mediafiles:/code/public/media
      - statics:/code/public/static
      - logs:/logs/
services:
  mailcatcher:
    <<: [ *env ]
    image: corpusops/mailhog
    hostname: mailcatcher
    volumes: ["mails:/mails"]
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /mails
      MH_SMTP_BIND_ADDR: 0.0.0.0:1025
      MH_API_BIND_ADDR: 0.0.0.0:8025
      MH_UI_BIND_ADDR: 0.0.0.0:8025
      MH_UI_WEB_PATH: /mailcatcher
      MH_AUTH_FILE: /home/mailhog/pw
    user: root
    entrypoint:
      - sh
      - -c
      - >
        chown mailhog /mails
        && pw=$$(MH_AUTH_FILE="" MailHog bcrypt "$${MAILCATCHER_PASSWORD:-mailcatcher}")
        && echo "$${MAILCATCHER_USER:-mailcatcher}:$$pw" > $$MH_AUTH_FILE
        && su mailhog -p -c MailHog
  redis:
    <<: [ *env ]
    image: corpusops/redis:4.0-alpine
    hostname: redis
    volumes:
      - 'redis:/data'
  db:
    <<: [ *env ]
    image: corpusops/pgrouting:10.1-2.5.4
    volumes:
      - postgresql:/var/lib/postgresql/data
  nginx:
    <<: [ *env ]
    restart: always
    image: corpusops/nginx:1.14-alpine
    depends_on:
      - {{cookiecutter.app_type}}
    volumes:
      - ./local/terra-back-deploy/prod/etc/nginx/vhost.conf.template:/etc/nginx/conf.d/default.conf.template
      - mediafiles:/public/media/:ro
      - statics:/public/static/
      - logs:/logs/
    command: >
      /bin/sh -c "
      CONF_PREFIX=FRONT_ confenvsubst.sh /etc/nginx/conf.d/default.conf.template
      && exec /bin/supervisord.sh"
    environment:
    - SUPERVISORD_CONFIGS=/etc/supervisor.d/cron /etc/supervisor.d/nginx
  {{cookiecutter.app_type}}:
    <<: [ *{{cookiecutter.app_type}} ]
  cron:
    <<: [ *{{cookiecutter.app_type}} ]
    depends_on:
      - {{cookiecutter.app_type}}
    command: /bin/sh /code/init/cron.sh
  backup:
    <<: [ *env ]
    image: "corpusops/dbsmartbackup:pg10"
    restart: always
    volumes:
      - backupdb-dumps:/srv/backups/
      - backupdb-logs:/srv/backups/logs/
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - ./local/backup/setup/reconfigure.yml:/setup/reconfigure.yml:ro
  convertit:
    <<: [ *env ]
    image: makinacorpus/convertit
    hostname: convertit
volumes:
  backupdb-logs:
  backupdb-dumps:
  postgresql:
  redis:
  mediafiles:
  statics:
    name: "${{'{'}}{{cookiecutter.app_type.upper()}}_NAME}back-statics-${{'{'}}{{cookiecutter.app_type.upper()}}_IMAGE_VERSION}"
    external: false
  logs:
  mails:
